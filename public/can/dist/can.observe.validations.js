(function(e,m,i){var g=function(a,c,f){f||(f=c,c={});c=c||{};a=e.makeArray(a);if(!c.testIf||c.testIf.call(this)){var b=this;e.each(a,function(a,d){b.validations[d]||(b.validations[d]=[]);b.validations[d].push(function(b){b=f.call(this,b);return b===i?i:c.message||b})})}},l=e.Observe.prototype.__set;e.Observe.prototype.__set=function(a,c,f,b,j){var d=this,h=d.constructor.validations,k=function(b){j&&j.call(d,b);e.trigger(d,"error",[a,b],!0)};l.call(d,a,c,f,b,k);h&&h[a]&&(c=d.errors(a))&&k(c);return this};
e.each([e.Observe,e.Model],function(a,c){c!==i&&e.extend(c,{validations:{},validate:g,validationMessages:{format:"is invalid",inclusion:"is not a valid option (perhaps out of range)",lengthShort:"is too short",lengthLong:"is too long",presence:"can't be empty",range:"is out of range"},validateFormatOf:function(f,b,a){g.call(this,f,a,function(d){if("undefined"!=typeof d&&""!=d&&null==(""+d).match(b))return this.constructor.validationMessages.format})},validateInclusionOf:function(a,b,c){g.call(this,
a,c,function(a){if("undefined"!=typeof a&&0==e.grep(b,function(b){return b==a}).length)return this.constructor.validationMessages.inclusion})},validateLengthOf:function(a,b,c,d){g.call(this,a,d,function(a){if("undefined"==typeof a&&0<b||a.length<b)return this.constructor.validationMessages.lengthShort+" (min="+b+")";if("undefined"!=typeof a&&a.length>c)return this.constructor.validationMessages.lengthLong+" (max="+c+")"})},validatePresenceOf:function(a,b){g.call(this,a,b,function(a){if("undefined"==
typeof a||""==a||null===a)return this.constructor.validationMessages.presence})},validateRangeOf:function(a,b,c,d){g.call(this,a,d,function(a){if("undefined"!=typeof a&&a<b||a>c)return this.constructor.validationMessages.range+" ["+b+","+c+"]"})}})});e.extend(e.Observe.prototype,{errors:function(a,c){a&&(a=e.isArray(a)?a:[a]);var f={},b=this,g=function(a,d){e.each(d,function(d,e){var g=e.call(b,h?b.__convert?b.__convert(a,c):c:b[a]);g&&(f[a]||(f[a]=[]),f[a].push(g))})},d=this.constructor.validations,
h=a&&1===a.length&&2===arguments.length;e.each(a||d||{},function(a,b){"number"==typeof a&&(a=b,b=d[a]);g(a,b||[])});return e.isEmptyObject(f)?null:h?f[a[0]]:f}})})(can={},this);

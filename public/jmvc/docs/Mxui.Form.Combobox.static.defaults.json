c({"name": "Mxui.Form.Combobox.static.defaults", "type": "attribute", "parents": ["Mxui.Form.Combobox.static"], "comment": "<p>Default setttings for the Combobox.  These can all be overridden.</p>\n\n<ul>\n<li><strong>classNames</strong>: <em>String.</em> When mxui_form_combobox is called on an \nelement, it is wrapped in a div.  The element is given the class that \nis defined by <code>classNames</code>.</li>\n<li><strong>filterEnabled</strong>: <em>Boolean.</em> Controls whether autocompletion is enabled on the combobox.</li>\n<li><strong>displayHTML</strong>: <em>Boolean.</em> If true, show the contents of a list item as rich HTML.  If false, show it as plain text.</li>\n<li><strong>selectedClassName</strong>: <em>String.</em> The class that will be assigned to options that the user focuses on.</li>\n<li><strong>activatedClassName</strong>: <em>String.</em> The class that will be assigned to options that the user clicks. </li>\n<li><strong>disabledClassName</strong>: <em>String.</em> The class that will be assigned to options that are disabled and the user cannot select.</li>\n<li><strong>width</strong>: <em>Number/null.</em> The width of the Combobox.</li>\n<li><strong>emptyItemsText</strong>: <em>String.</em> The text that is shown when the Combobox has no items to display.</li>\n<li><strong>watermarkText</strong>: <em>String.</em> The text to display if there is no option selected.</li>\n<li><strong>showNoSelectionOption</strong>: <em>Boolean.</em> Lets the user choose to make no selection. </li>\n<li><strong>noSelectionMsg</strong>: <em>String.</em> The text to show for a non-selection. </li>\n<li><strong>storeSerializedItem</strong>: <em>Boolean.</em> If true, store the attributes of the currently selected item as JSON in a hidden input.  If false, just store the item's &lt;option&gt; value in the hidden input.</li>\n<li><strong>nonSerializedAttrs</strong>: <em>String[].</em> A blacklist array of attributes to not store, assuming <code>storeSerializedItem</code> is true.</li>\n<li><strong>overrideDropdown</strong>: <em>Boolean.</em> Determines whether to use the standard Combobox dropdown animation, or the animation function bound to the 'show:dropdown' event.</li>\n<li><strong>noItemsMsg</strong>: <em>String.</em> Text to show when no items are available in an autocomplete-enabled field.</li>\n<li><p><strong>render</strong>: <em>Object.</em> This method defines the HTML that wraps a Combobox item.  To override, initialize the Combobox with a function like so:</p>\n\n<pre><code>$(\"input\").mxui_form_combobox({\n  render: {\n    'itemTemplate': function(item, val){\n      // HTML wrapping logic goes here\n    }\n  }\n});\n</code></pre>\n\n<p>Where <code>item</code> is the item being drawn, and <code>val</code> is the value that the item represents internally.</p></li>\n</ul>", "src": "mxui/form/combobox/combobox.js", "line": 26, "children": []})
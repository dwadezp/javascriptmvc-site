c({"name": "can.Control.route", "type": "page", "comment": "<p>The can.Control.route plugin adds a [can.route] processor to can.Control. This allows\ncreating routes and binding to <code>can.route</code> in a single step. For example:</p>\n\n<pre><code>var Router = can.Route({\n    \"route\" : function(data){\n        // the route is empty\n    },\n    \"todos route\" : function(data){\n        // the route says todos\n    },\n    \"todo/:id route\" : function(data){\n        // the route an id as data\n    }\n});\n</code></pre>\n\n<p>The plugin doesn't affect the way you usually use [can.route]. The above control for example can\nadd a default value for the id in the <code>todos/:id</code> route like this:</p>\n\n<pre><code>var Router = can.Route({\n    init : function(el, ops) {\n        can.route('todos/:id', { id : 1 });\n    },\n\n    \"route\" : function(data){\n        // the route is empty\n    },\n\n    \"todos route\" : function(data){\n        // the route says todos\n    },\n\n    \"todo/:id route\" : function(data){\n        // the route an id as data\n    }\n});\n</code></pre>\n\n<p>Here are some examples of which function will be called and the data passed:</p>\n\n<p><code>#!</code>: Will call the <code>route</code> control method with an empty data object</p>\n\n<p><code>#!todos</code>: Calls the <code>todos route</code> control method with an empty data object</p>\n\n<p><code>#!todos&amp;order=asc&amp;hidedone=true</code>: Calls the <code>todos route</code> control method with the data like\n<code>{ order : 'asc', hidedone : 'true' }</code></p>\n\n<p><code>#!todo/</code>: Calls <code>todo/:id route</code> with the default id set <code>{ id : 1 }</code></p>\n\n<p><code>#!todo/10</code>: Calls <code>todo/:id route</code> with data <code>{ id : 10 }</code></p>\n\n<p><code>#!todo/10&amp;done=true</code>: Calls <code>todo/:id route</code> with <code>{ id : 10, done : 'true' }</code></p>", "parents": ["can.Control"], "plugin": "can/control/route", "test": "can/control/view/qunit.html", "download": "http://donejs.com/can/dist/can.control.route.js", "src": "can/control/route/route.md", "children": []})
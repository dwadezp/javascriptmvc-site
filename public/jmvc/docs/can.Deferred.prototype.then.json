c({"name": "can.Deferred.prototype.then", "type": "function", "parents": ["can.Deferred.prototype"], "comment": "<p><code>deferred.then( doneCallbacks, failCallbacks )</code> adds handler(s) to be called when the Deferred object to be called after its resolved.</p>\n\n<pre><code>var def = can.Deferred();\ndef.then(function(){\n    //- Called when the deferred is resolved.\n}, function(){\n    //- Called when the deferred fails.\n})\n</code></pre>", "params": {"doneCallbacks": {"order": 0, "description": "<p>A function called when the Deferred is resolved.</p>", "name": "doneCallbacks", "type": "Object", "optional": false}, "failCallbacks": {"order": 1, "description": "<p>A function called when the Deferred is rejected.</p>", "name": "failCallbacks", "type": "Object", "optional": false}}, "src": "can/util/util.js", "line": 535, "children": []})
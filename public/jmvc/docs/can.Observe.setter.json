c({"name": "can.Observe.setter", "type": "page", "comment": "<p>Setter extends the Observe object to provide convenient helper methods for setting attributes on a observable.</p>\n\n<p>The <em>attrs</em> and <em>attr</em> function look for a <em>setATTRNAME</em> function to handle setting the date property.</p>\n\n<p>By providing a function that takes the raw data and returns a form useful for JavaScript, \nwe can make our observes (which use <em>attrs</em> and <em>attr</em>) automatically convert data.</p>\n\n<pre><code>var Contact = can.Observe({\n    setBirthday : function(raw){\n        if(typeof raw == 'number'){\n            return new Date( raw )\n        }else if(raw instanceof Date){\n            return raw;\n        }\n    }\n});\n\n// set on init\nvar contact = new Contact({ birthday: 1332777411799 });\n\n// set via 'attr' method\ncontact.attr('birthday', new Date().getTime())\n\n// set via 'attrs' method\ncontact.attrs({\n    'birthday': new Date().getTime()\n});\n</code></pre>\n\n<p>*Note: Its important to include this plugin before you include other plugins that \nextend Observe so that prototype chain is extended correctly.</p>", "parents": ["can.Observe"], "src": "can/observe/setter/setter.md", "children": []})
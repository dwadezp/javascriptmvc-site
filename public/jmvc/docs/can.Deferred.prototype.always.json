c({"name": "can.Deferred.prototype.always", "type": "function", "parents": ["can.Deferred.prototype"], "comment": "<p><code>deferred.always( alwaysCallbacks )</code> adds handler(s) to be called when the Deferred object is either resolved or rejected.</p>\n\n<pre><code>var def = can.Deferred();\ndef.always( function(){\n    //- Called whether the handler fails or is success.\n});\n</code></pre>", "params": {"alwaysCallbacks": {"order": 0, "description": "<p>A function called when the Deferred is resolved or rejected.</p>", "name": "alwaysCallbacks", "type": "Object", "optional": false}}, "src": "can/util/util.js", "line": 385, "children": []})
c({"name": "Mxui.Nav.Selectable", "inherits": "jQuery.Controller", "type": "class", "comment": "<p>Selectable provides keyboard and mouse selection to a group of \nitems. Instead of listening to click and key events, \nadd selectable and listen to activate and select events. It also \nprovides multi-selection and activation with the shift and ctrl key.</p>\n\n<h2>Basic Example</h2>\n\n<p>If you have HTML like:</p>\n\n<pre><code>&lt;div id='menu'&gt;\n  &lt;li tabindex=\"0\"&gt;JavaScriptMVC&lt;/li&gt;\n  &lt;li tabindex=\"0\"&gt;StealJS&lt;/li&gt;\n  &lt;li tabindex=\"0\"&gt;FuncUnit&lt;/li&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>And styles like:</p>\n\n<pre><code>li          { background-color: #ddddee; }\nli.selected { background-color: #efefff; }\nli.activated{ background-color: #dddddd; }\n</code></pre>\n\n<p>Make this selectable like:</p>\n\n<pre><code>$('#menu').mxui_nav_selectable();\n</code></pre>\n\n<p>You can listen for <code>activate</code> and <code>select</code> events (also <code>deactivate</code> and <code>deselect</code>) like:</p>\n\n<pre><code>$('#menu').delegate('li', 'activate', function(ev, items){\n   console.log(this, 'has been activated')\n}).delegate('li', 'select', function(ev){\n   console.log(this, 'has been activated')\n})\n</code></pre>\n\n<h2>Demo</h2>\n\n<p>Use the keyboard and mouse to navigate.  Use the <strong>SHIFT</strong> and <strong>CTRL</strong> keys too!</p>\n\n<div class='demo_wrapper' data-demo-src='mxui/nav/selectable/demo.html'></div>\n\n<h2>Listening to events</h2>\n\n<p>Instead of listening to clicks and keypresses and having to provide navigation\nfor each, selectable allows you to listen to either <code>activate</code> or <code>select</code> events.</p>\n\n<p><strong>select</strong> events happen when an element is moused over or navigated to with the keyboard.</p>\n\n<p><strong>activate</strong> events happen when an element (or elements) are click \n  or the <em>enter</em> key is pressed.</p>\n\n<p>When an activate event happens, it comes back with the second argument \nthe elements (or models) that are activated.  For example, if <strong>SHIFT</strong>\nor <strong>CTRL</strong> was used to select multiple elements, <code>activated</code>\nwould be a jQuery-wrapped collection of the activated elements:</p>\n\n<pre><code>$('#menu').delegate('li', 'activate', function(ev, activated){\n   console.log(activated, 'has been activated')\n})\n</code></pre>\n\n<p>However, if [jQuery.fn.model] is used to add model data to those elements, \nthen activated will be the model instances.</p>", "test": "mxui/nav/selectable/funcunit.html", "parents": ["Mxui"], "params": {"element": {"order": 0, "description": "<p>an HTMLElement or jQuery-wrapped element.</p>", "name": "element", "type": "HTMLElement", "optional": false}, "options": {"order": 1, "description": "<p>options to set on the selectable, with the \nfollowing <strong>names</strong>,  <code>default values</code>, and meanings:</p>\n\n<ul>\n<li><p><strong>selectOn</strong> <code>\"[tabindex]\"</code> - The selector used to identify \nsomething that is selectable.</p></li>\n<li><p><strong>selectedClassName</strong> <code>\"selected\"</code> - The className that \ngets added to things selected.</p></li>\n<li><p><strong>activateClassName</strong> <code>\"activated\"</code> - The className \nthat gets added to activated elements.</p></li>\n<li><p><strong>multiActivate</strong> <code>true</code> - True for multi-selection, \nfalse if only a single item can be activated at a time.</p></li>\n<li><p><strong>cache</strong> <code>false</code> - Cache selectables for performance.</p></li>\n<li><p><strong>outsideDeactivate</strong> <code>true</code> - Deactivate selected when a click or \nkeypress happens outside the selectable. </p></li>\n</ul>\n\n<p>Use them like:</p>\n\n<pre><code>$('#menu').mxui_nav_selectable({\n  selectOn : \"tr\",\n  selectedClassName : \"ui-hover\",\n  activateClassName: \"ui-active\",\n  multiActivate: false,\n  cache: true,\n  outsideDeactivate: false\n})\n</code></pre>", "name": "options", "type": "Object", "optional": false}}, "src": "mxui/nav/selectable/selectable.js", "line": 10, "children": ["Mxui.Nav.Selectable.prototype"]})
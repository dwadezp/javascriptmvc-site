c({"name": "migrate", "type": "page", "comment": "<h2>Control</h2>\n\n<h2><code>this.find</code> was removed</h2>\n\n<p><code>this.find</code> was removed in favor of doing: <code>this.element.find</code>.</p>\n\n<h2>Models</h2>\n\n<h3>No Conversion Necessary</h3>\n\n<p>Before when you would have to include the type of the model in the AJAX parameters, now\nwhen you return a deferred this is handled automatically.  So for example, the following:</p>\n\n<pre><code>$.Model('Cookbook', {\n    findAll : function(params, success, error){\n        return $.get(\"/recipes.json\", {}, \n            success, \"json contact.models\");\n    }\n}, {});\n</code></pre>\n\n<p>becomes:</p>\n\n<pre><code>$.Model('Cookbook', {\n    findAll : function(params, success, error){\n        return $.get(\"/recipes.json\", {}, success, \"json\");\n    }\n}, {});\n</code></pre>\n\n<h3>Model Element Helpers Removed</h3>\n\n<p>We removed the <code>.model()</code> and <code>.models()</code> helpers in favor of using traditional data accessors.\nNow when you want to retrieve models from a element you bound them to, simply do: \n<code>can.$('#myelm').data('model')</code> or to update <code>can.$('#myelm').data('model', modelInstance)</code>.</p>", "parents": ["index"], "title": "Migrating", "src": "can/migrate.md", "children": []})
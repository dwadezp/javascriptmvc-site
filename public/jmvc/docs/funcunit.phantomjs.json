c({"name": "funcunit.phantomjs", "type": "page", "comment": "<p>[http://www.phantomjs.org/ PhantomJS] is a headless WebKit. FuncUnit integrates with Phantom to run \ntests from the commandline.  This has large performance benefits, enough that it makes it much more \nfeasible to integrate FuncUnit tests into your build process without significantly slowing it down.</p>\n\n<h2>Install</h2>\n\n<p>Before you can use PhantomJS, you have to install it. The other automation tools come prepackaged in \nJMVC, but Phantom is too large of a download.</p>\n\n<p>Note: There is a known issue with Phantom 1.4.0+, which will be fixed in a future release.  Until then, \nplease be sure to use Phantom 1.3.0 to avoid Broken Pipe errors.  </p>\n\n<p><strong>On Mac</strong></p>\n\n<ol>\n<li>Download [http://code.google.com/p/phantomjs/downloads/detail?name=phantomjs-1.3.0-macosx-static-x86.zip&amp;can=2&amp;q= PhantomJS]</li>\n<li>Unzip it somewhere like: <em>/Applications/</em></li>\n<li>Add it to your path:</li>\n</ol>\n\n<pre><code class='javascript'>sudo ln -s /Applications/phantomjs-1.3.0/bin/phantomjs /usr/local/bin/</code></pre>\n\n<p><em>Note: Not all systems will have /usr/local/bin/.  Some systems will have: /usr/bin/, /bin/, or usr/X11/bin instead.</em></p>\n\n<p><strong>On Windows</strong></p>\n\n<ol>\n<li>Download [http://code.google.com/p/phantomjs/downloads/detail?name=phantomjs-1.3.0-win32-dynamic.zip&amp;can=2&amp;q= PhantomJS]</li>\n<li>Install it</li>\n<li>Add it to your path.  For information on setting path variable in Windows, [http://www.java.com/en/download/help/path.xml click here].</li>\n</ol>\n\n<h2>Use</h2>\n\n<p>To run any test via PhantomJS, use funcunit/run</p>\n\n<pre><code class='javascript'>./js funcunit/run phantomjs path/to/funcunit.html</code></pre>\n\n<h2>Debugging</h2>\n\n<p>If you notice a broken test, debugging it in Phantom is not the place to start. Open the test in browser, and \nverify the same test breaks there.  If so, debug the test in browser.</p>\n\n<p>If you notice the more rare event that a test breaks in Phantom but works in browser, you can use console.log \nto debug it. In <code>funcunit/commandline/phantomjs.js</code>, uncomment the print: true option. Add console.logs \nto your code and debug.</p>\n\n<p>One thing to be aware of is that phantomjs tests run within an iframe in the funcunit.html page. This is different \nfrom the normal behavior of opening the application page using window.open. Phantom doesn't support window.open, \nso a frame is used instead. This can occassionally cause problems if your application assumes it is running within \nwindow.top.</p>", "title": "PhantomJS", "parents": ["funcunit.integrations"], "order": 2, "src": "funcunit/pages/phantomjs.md", "children": []})
C({"name": "jQuery.Observe.prototype.bind", "params": {"eventType": {"description": "<p>the event name.  Currently,\nonly 'change' events are supported. For more fine \ngrained control, explore [jQuery.Observe.prototype.delegate].</p>", "type": "String", "optional": false, "order": 0, "name": "eventType"}, "handler(event, attr, how, newVal, oldVal)": {"order": 1, "description": "<p>A \ncallback function where</p>\n\n<ul>\n<li>event - the event</li>\n<li>attr - the name of the attribute changed</li>\n<li>how - how the attribute was changed (add, set, remove)</li>\n<li>newVal - the new value of the attribute</li>\n<li>oldVal - the old value of the attribute</li>\n</ul>", "name": "handler(event, attr, how, newVal, oldVal)", "type": "Function", "optional": false}}, "ret": {"description": "<p>{$.Observe} the observe</p>", "type": undefined}, "type": "function", "parents": ["jQuery.Observe.prototype"], "comment": "<p>Listen to changes in this observe.</p>\n\n<pre><code>o = new $.Observe({name : \"Payal\"});\no.bind('change', function(ev, attr, how, newVal, oldVal){\n  // ev    -&gt; {type: 'change'}\n  // attr  -&gt; \"name\"\n  // how   -&gt; \"add\"\n  // newVal-&gt; \"Justin\"\n  // oldVal-&gt; undefined \n})\n\no.attr('name', 'Justin')\n</code></pre>", "src": "../jquery/lang/observe/observe.js", "children": []})
c({"name": "modifiers", "type": "page", "comment": "<p>jQuery uses the modifiers <a href=\"http://api.jquery.com/after/\">.after()</a>, <a href=\"http://api.jquery.com/append/\">.append()</a>,\n<a href=\"http://api.jquery.com/before/\">.before()</a>, <a href=\"http://api.jquery.com/html/\">.html()</a>,\n<a href=\"http://api.jquery.com/prepend/\">.prepend()</a>, <a href=\"http://api.jquery.com/replaceWith/\">.replaceWith()</a>\nand <a href=\"http://api.jquery.com/text/\">.text()</a> to alter the content of an element.</p>\n\n<p>The <strong>modifiers</strong> plugin allows you to render a can.View using these modifiers. For example, you can render a template\nfrom <em>todo/todos.ejs</em> looking like this:</p>\n\n<pre><code>&lt;% for(var i = 0; i &lt; this.length; i++ ){ %&gt;\n  &lt;li&gt;&lt;%= this[i].name %&gt;&lt;/li&gt;\n&lt;% } %&gt;\n</code></pre>\n\n<p>By calling the html modifier on an element like this:</p>\n\n<pre><code>$('#todos').html('todo/todos.ejs', [\n    { name : 'First Todo' },\n    { name : 'Second Todo' }\n]);\n</code></pre>\n\n<p><strong>Note:</strong> You always have to provide the data (second) argument to render a view. If you have no data to render pass\nan empty object:</p>\n\n<pre><code>$('#todos').html('todo/todos.ejs', {});\n// Render todo/todos.ejs wit no data\n</code></pre>", "parents": ["can.view"], "src": "can/view/modifiers/modifiers.md", "children": []})
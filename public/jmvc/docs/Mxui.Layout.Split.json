c({"name": "Mxui.Layout.Split", "inherits": "jQuery.Controller", "type": "class", "comment": "<p>The splitter widget manages a container whose content \"panels\" can be independently resized. It\ndoes this by inserting a \"splitter bar\" between each panel element, which can be dragged or\noptionally collapsed.</p>\n\n<p>Panel elements can be added or removed from the container at any time using ordinary DOM manipulation.\nThe spliter widget will automatically adjust the splitter bars anytime a <code>resize</code> event is triggered.</p>\n\n<p>The splitter widget will try to auto-detect whether it should operate in <code>vertical</code> or <code>horizontal</code>\nmode by inspecting the positions of its first two elements. If the panels can wrap due to floating\ncontent, or the container does not have two elements at initialization time, this check may be\nunreliable, so just pass the direction in the options.</p>\n\n<h2>Basics</h2>\n\n<p>Suppose you have this HTML:</p>\n\n<pre><code>&lt;div id=\"container\"&gt;\n  &lt;div class=\"panel\"&gt;Content 1&lt;/div&gt;\n  &lt;div class=\"panel\"&gt;Content 2&lt;/div&gt;\n  &lt;div class=\"panel\"&gt;Content 3&lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>The following will create the splitter widget:</p>\n\n<pre><code>$('#container').mxui_layout_split();\n</code></pre>\n\n<p>You can also provide the direction explicitly:</p>\n\n<pre><code>$('#container').mxui_layout_split({ direction: 'vertical' });\n</code></pre>\n\n<p>The <code>direction</code> parameter refers to the splitter bar: <code>vertical</code> bars mean that the panels are arranged\nfrom left-to-right, and <code>horizontal</code> bars mean the panels are arranged from top-to-bottom.</p>\n\n<p>To indicate that a panel should be collapsible, simply apply the <code>collapsible</code> CSS class\nto the panel.</p>\n\n<h2>Styling</h2>\n\n<p>The splitter widget uses a number of CSS classes that permit fine-grained control over the look\nand feel of various elements. The most commonly used are the following:</p>\n\n<ul>\n<li><code>.mxui_layout_split</code>: the container itself\n<ul><li><code>.splitter</code>: splitter bars</li>\n<li><code>.vsplitter</code>: only vertical splitter bars</li>\n<li><code>.hsplitter</code>: only horizontal splitter bars</li>\n<li><code>.collapser</code>: collapser buttons</li>\n<li><code>.left-collapse</code>: only left collapser buttons</li>\n<li><code>.right-collapse</code>: only right collapser buttons</li></ul></li>\n</ul>\n\n<p>You can see the standard styles for the splitter widget\n[https://github.com/jupiterjs/mxui/blob/master/layout/split/split.css here].</p>\n\n<p>Additionally, the <code>panelClass</code> initialization option allows you to specify which subelements of\nthe container should be interpreted as panel elements, and the <code>hover</code> option specifies a CSS class\nwhich will be applied to a splitter when the user hovers over it.</p>\n\n<h2>Events</h2>\n\n<p>The splitter widget responds to the [jQuery.event.special.resize resize] event by performing a quick\ncheck to see if any panel elements have been inserted or removed, and updating its internal\nstate to reflect the changes. Simply add or remove whatever panel elements you wish from the DOM\nusing any appropriate jQuery methods, and then trigger the <code>resize</code> event on it:</p>\n\n<pre><code>var container = $('#container');\ncontainer.append($('&lt;div class=\"panel\"&gt;New Content&lt;/div&gt;'));\ncontainer.find('.panel:first').remove();\ncontainer.resize();\n</code></pre>\n\n<h2>Demo</h2>\n\n<div class='demo_wrapper' data-demo-src='mxui/layout/split/demo.html'></div>\n\n<h2>More Examples</h2>\n\n<p>For some larger, more complex examples, see [//mxui/layout/split/split.html here].</p>", "parents": ["Mxui"], "test": "mxui/layout/split/funcunit.html", "description": "Makes a splitter widget.", "params": {"element": {"order": 0, "description": "<p>an HTMLElement or jQuery-wrapped element.</p>", "name": "element", "type": "HTMLElement", "optional": false}, "options": {"order": 1, "description": "<p>options to set on the split:</p>\n\n<ul>\n<li><strong>hover</strong> (def. <code>\"split-hover\"</code>) - CSS class to apply to a splitter when the mouse enters it</li>\n<li><strong>direction</strong> - whether the panel layout is <code>\"vertical\"</code> or <code>\"horizontal\"</code> (see above)</li>\n<li><strong>dragDistance</strong> (def. <code>5</code>) - maximum number of pixels away from the slider to initiate a drag</li>\n<li><strong>panelClass</strong> - CSS class that indicates a child element is a panel of this container\n                     (by default any child is considered a panel)</li>\n</ul>", "name": "options", "type": "Object", "optional": false}}, "ret": {"description": "", "type": "Mxui.Layout.Split"}, "src": "mxui/layout/split/split.js", "line": 8, "children": ["Mxui.Layout.Split.static", "Mxui.Layout.Split.prototype"]})
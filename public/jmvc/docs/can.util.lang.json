c({"name": "can.util.lang", "type": "page", "comment": "<p>CANjs has several lightweight language helper plugins.</p>\n\n<h2>[can.Object Object]</h2>\n\n<p>Methods useful for comparing Objects. For example, if two\nobjects are the same:</p>\n\n<pre><code>can.Object.same({foo: \"bar\"}, {foo: \"bar\"});\n</code></pre>\n\n<h2>[can.Control Observe]</h2>\n\n<p>Makes an Object's properties observable:</p>\n\n<pre><code>var person = new can.Control({ name: \"Justin\" })\nperson.bind('change', function(){ ... })\nperson.attr('name', \"Brian\");\n</code></pre>\n\n<h2>[can.String String]</h2>\n\n<p>String helpers capitalize, underscore, and perform similar manipulations\non strings.  They can also lookup a value in an object:</p>\n\n<p>can.String.getObject(\"foo.bar\",{foo: {bar: \"car\"}})</p>\n\n<h2>[can.toJSON toJSON]</h2>\n\n<p>Used to create or consume JSON strings.</p>\n\n<h2>[can.Vector Vector]</h2>\n\n<p>Used for vector math.</p>", "title": "Language Helpers", "parents": ["can.util"], "description": "A collection of language helpers for things like String, Objects, etc.", "src": "can/util/string/string.js", "line": 0, "children": []})
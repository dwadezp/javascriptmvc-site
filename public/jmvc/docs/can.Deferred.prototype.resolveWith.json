c({"name": "can.Deferred.prototype.resolveWith", "type": "function", "parents": ["can.Deferred.prototype"], "comment": "<p><code>deferred.resolveWith(context, doneCallbacks)</code> resolves a Deferred and calls the <code>doneCallbacks</code> give the arguments.</p>\n\n<pre><code>var def = can.Deferred();\ndef.resolveWith(this, { animals: [ 'cows', 'monkey', 'panda' ] })\n</code></pre>", "params": {"context": {"order": 0, "description": "<p>Context passed to the <code>doneCallbacks</code> as the <code>this</code> object.</p>", "name": "context", "type": "Object", "optional": false}, "args": {"order": 1, "description": "<p>Optional array of args that are passed to the <code>doneCallbacks</code>.</p>", "name": "args", "type": "Object", "optional": false}}, "src": "can/util/util.js", "line": 373, "children": []})
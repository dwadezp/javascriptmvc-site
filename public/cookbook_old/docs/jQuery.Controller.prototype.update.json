C({"name": "jQuery.Controller.prototype.update", "params": {"options": {"description": "<p>the object passed to the [jquery.controller.plugin jQuery helper function]</p>", "type": "Object", "optional": false, "order": 0, "name": "options"}}, "ret": {"type": "undefined", "description": ""}, "type": "function", "parents": ["jQuery.Controller.prototype"], "comment": "<p>Called if an controller's [jquery.controller.plugin jQuery helper] is \ncalled on an element that already has a controller instance\nof the same type.  The base method \nextends [jQuery.Controller.prototype.options this.options] \nwith the options passed in.  If you overwrite this, you might want to call\nthis._super.</p>\n\n<h3>Example</h3>\n\n<pre><code>$.Controller(\"Thing\",{\n  init: function( el, options ) {\n    alert( 'init:'+this.options.prop )\n  },\n  update: function( options ) {\n    this._super(options);\n    alert('update:'+this.options.prop)\n  }\n});\n$('#myel').thing({prop : 'val1'}); // alerts init:val1\n$('#myel').thing({prop : 'val2'}); // alerts update:val2\n</code></pre>", "src": "../jquery/controller/controller.js", "children": []})
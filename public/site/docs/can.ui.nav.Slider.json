c({"name": "can.ui.nav.Slider", "type": "class", "comment": "<p>Creates a slider with <code>min</code>, <code>max</code> and <code>interval</code> options.</p>\n\n<p>Given the following markup:</p>\n\n<pre><code>&lt;div class=\"container\"&gt;\n    &lt;div id=\"slider\"&gt;&lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>You can create a slider with the following code:</p>\n\n<pre><code> var slider = new can.ui.nav.Slider($('#slider'), {\n    interval: 1, \n    min: 1, \n    max: 10, \n    val: 4\n});\n</code></pre>\n\n<p>The targeted element then becomes a draggable box within the bounding\nbox of it's parent element. You can then call the val method to\nretrieve it's current value:</p>\n\n<pre><code>slider.val() // 4\n</code></pre>\n\n<p>You can also use the <code>val</code> method as a setter:</p>\n\n<pre><code>slider.val(6)\n</code></pre>\n\n<p>Alternatively, you can subscribe to the <code>change</code> event on the slider,\nwhich will pass the value as the second argument to the event handler.</p>\n\n<pre><code>$(\"#slider\").change(function( e, value ) {\n    value; // 6\n});\n</code></pre>\n\n<h2>Demo</h2>\n\n<div class='demo_wrapper' data-demo-src='canui/nav/slider/slider.html'></div>", "test": "canui/nav/slider/slider_test.js", "parents": ["canui"], "description": "Creates a slider with `min`, `max` and `interval` options.", "params": {"options": {"order": 0, "description": "<ul>\n<li><p>An object literal describing the range,\ninterval and starting value of the slider</p></li>\n<li><p><code>min</code> {Number} - The minimum value the slider can go down to.</p></li>\n<li><code>max</code> {Number} - The maximum value the slider can go up to.</li>\n<li><code>interval</code> {Number} - The step size that the slider should increment\nby when being moved.    </li>\n<li><code>val</code> {Number} - The initial starting value of the slider.</li>\n</ul>", "name": "options", "type": "Object", "optional": false}}, "src": "canui/nav/slider/slider.js", "line": 7, "children": ["can.ui.nav.Slider.prototype"]})
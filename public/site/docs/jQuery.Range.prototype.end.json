c({"name": "jQuery.Range.prototype.end", "params": {"set": {"description": "<p>a set value if setting the end of the range or nothing if reading it.</p>", "type": "Object|String|Number", "optional": true, "order": 0, "name": "set"}}, "ret": {"type": "undefined", "description": ""}, "type": "function", "parents": ["jQuery.Range.prototype"], "comment": "<p><code>range.end([end])</code> gets or sets the end of the range.\nIt takes similar options as [jQuery.Range::start start]:</p>\n\n<ul>\n<li><p><strong>Object</strong> - an object with the new end container and offset like</p>\n\n<pre><code>$.Range().end({container:  $('#foo')[0], offset: 20})\n</code></pre></li>\n<li><p><strong>Number</strong> - the new offset value. The container is kept the same.</p></li>\n<li><p><strong>String</strong> - adjusts the offset by converting the string offset to a number and adding it to the current\noffset. For example, the following moves the offset forward four characters:</p>\n\n<pre><code>$('#foo').range().end(\"+4\")\n</code></pre></li>\n</ul>\n\n<p>Note that <code>end</code> can return a text node. To get the containing element use this:</p>\n\n<pre><code>var startNode = range.end().container;\nif( startNode.nodeType === Node.TEXT_NODE ||\n startNode.nodeType === Node.CDATA_SECTION_NODE ) {\n     startNode = startNode.parentNode;\n}\n$(startNode).addClass('highlight');\n</code></pre>", "src": "jquery/dom/range/range.js", "line": 358, "children": []})
c({"name": "can.ui.nav.Accordion", "type": "class", "comment": "<p>Provides basic accordion vertical accordion functionality.</p>\n\n<h2>Basic Example</h2>\n\n<p>If you have the following html:</p>\n\n<pre><code>&lt;div id='accordion'&gt;\n  &lt;h3&gt;Baked Goods&lt;/h3&gt;\n  &lt;ul&gt; &lt;li&gt;Cookies&lt;/li&gt; ... &lt;/ul&gt;\n\n  &lt;h3&gt;Americana&lt;/h3&gt;\n  &lt;ul&gt; &lt;li&gt;Hot Dog&lt;/li&gt; ... &lt;/ul&gt;\n\n  &lt;h3&gt;Other&lt;/h3&gt;\n  &lt;div&gt;I like Italian ...&lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>The following will make the list sortable:</p>\n\n<pre><code>new can.ui.nav.Accordion($('#accordion'))\n</code></pre>\n\n<h2>Demo</h2>\n\n<div class='demo_wrapper' data-demo-src='canui/nav/accordion/demo.html'></div>\n\n<h2>Events</h2>\n\n<p>The accordion triggers 'show' events on content elements when shown.</p>\n\n<h2>HTML Considerations</h2>\n\n<p>The html should alternate between <code>title</code> and content \nelements.  By default, title elements are <code>h3</code> elements and\ncontent elements are any other element.</p>\n\n<p>It does support a <code>title</code> element followed by another <code>title</code> element,\nbut does not support a content element followed by another content element.</p>\n\n<h2>CSS Considerations</h2>\n\n<p>By default, accordion uses Themeroller styles. For content elements, you\ntypically want to add 'overflow:auto' to allow scrolling.</p>", "parents": ["canui"], "test": "canui/nav/accordion/funcunit.html", "construct": "", "ret": {"type": "can.ui.nav.accordion", "description": ""}, "params": {"element": {"order": 0, "description": "<p>the element to add the accordion to.</p>", "name": "element", "type": "HTMLElement", "optional": false}, "options": {"order": 1, "description": "<p>name-value pairs to configure\nthe accordion.  The available options are:</p>\n\n<ul>\n<li>title (\"h3\") - the title element selector</li>\n<li>duration (\"fast\") - how fast to animate</li>\n<li>activeClassName (\"ui-state-active\") - the className to add\nto the opened title</li>\n<li>hoverClassName (\"ui-state-hover\") - the className to add on\nhovering a title</li>\n<li>activateFirstByDefault (true) - activate the first title</li>\n<li>clickToActivate (true) - use click to activate</li>\n</ul>", "name": "options", "type": "Object", "optional": false}}, "src": "canui/nav/accordion/accordion.js", "line": 10, "children": ["can.ui.nav.Accordion.prototype"]})
c({"name": "jQuery.formParams", "type": "page", "comment": "<p><code>$.fn.formParams</code> returns an object of name-value pairs that represents values in a form.\nIt is able to nest values use a square bracket notation in the element name.</p>\n\n<p>When convert is set to <code>true</code> strings that represent numbers and booleans will\nbe converted and empty strings will not be added to the object.</p>\n\n<h2>Example</h2>\n\n<p>A form like this:</p>\n\n<pre><code>&lt;form&gt;\n  &lt;input type=\"text\" name=\"name[first]\" value=\"John\" /&gt;\n  &lt;input type=\"text\" name=\"name[middle]\" value=\"\" /&gt;\n  &lt;input type=\"text\" name=\"name[last]\" value=\"Doe\" /&gt;\n  &lt;input type=\"text\" name=\"age\" value=\"42\" /&gt;\n&lt;/form&gt;\n</code></pre>\n\n<p>Will return a JavaScript object like this:</p>\n\n<pre><code>$('form').formParams()\n// -&gt; {\n//   name : { first : \"John\", middle : \"\", last : \"Doe\" },\n//   age : \"42\"\n// }\n</code></pre>\n\n<p>With <em>convert</em> set to <code>true</code> it will look like this:</p>\n\n<pre><code>$('form').formParams(true)\n// -&gt; {\n//   name : { first : \"John\", last : \"Doe\" },\n//   age : 42\n// }\n</code></pre>\n\n<p>It is also possible to set the form values by passing an object to <code>$.fn.formParams</code>:</p>\n\n<pre><code>$('form').formParams({\n  name : {\n    first : 'Mike'\n  },\n  age : 23\n});\n</code></pre>\n\n<h2>Demo</h2>\n\n<div class='demo_wrapper' data-demo-src='jquery/dom/form_params/form_params.html'></div>", "parents": ["jquerypp"], "src": "jquery/dom/form_params/formparams.md", "children": []})
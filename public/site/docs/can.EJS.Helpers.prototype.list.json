c({"name": "can.EJS.Helpers.prototype.list", "params": {"list": {"description": "", "type": "", "optional": false, "order": 0, "name": "list"}, "cb": {"description": "", "type": "", "optional": false, "order": 1, "name": "cb"}}, "ret": {"type": "undefined", "description": ""}, "type": "function", "parents": ["can.EJS.Helpers.prototype"], "comment": "<p><code>can.EJS.Helpers.list</code> iterates over an observable list and\nsets up live binding. <code>list</code> takes a list of observables and a callback \nfunction with the signature <code>callback( currentItem, index, itemList )</code></p>\n\n<p>Typically, this will look like:</p>\n\n<pre><code>&lt;% list(items, function(item){ %&gt;\n     &lt;li&gt;&lt;%= item.attr('name') %&gt;&lt;/li&gt;\n&lt;% }) %&gt;\n</code></pre>\n\n<p>Whenever the list of observables changes, such as when an item is added or removed, \nthe EJS view will redraw the list in the DOM.</p>", "src": "can/view/ejs/ejs.js", "line": 771, "children": []})